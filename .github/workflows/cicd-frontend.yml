name: BSN Frontend Pipeline

on:
  push:
    branches: [ 'master' ]
    paths: [ 'book-network-ui/**', 'docker/docker-compose.yml', '.github/workflows/*-frontend.yml' ]
  workflow_dispatch:

defaults:
  run:
    working-directory: book-network-ui

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: book-social-network/bsn-ui

jobs:
  build-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract project version
        id: extract_version
        run: |
          echo "VERSION=$(jq --raw-output '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: ${{ env.IMAGE_NAME }}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          directory: ./book-network-ui
          dockerfile: ./book-network-ui/Dockerfile
          platform: linux/amd64
          tags: ${{ steps.extract_version.outputs.VERSION }}
          addLatest: true
          pushImage: ${{ !env.ACT }} # don't push image when local actions testing

      # TODO replace container image tag in `docker-compose.yml` with the one of built image and commit

  deploy:
    if: false # Don't run this job for now
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: [ build-image ]
    steps:
      - name: Create deployment folder
        run: ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp ../docker/docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variables and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          export API_ROOT_URL='/api/v1' # TODO backend url
          cd ci-cd
          docker-compose -f docker-compose.yml pull -q
          docker-compose -f docker-compose.yml up -d
          EOF
