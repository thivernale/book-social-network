spring:
  application:
    name: book-network
  servlet:
    multipart:
      max-file-size: 50MB
  devtools:
    add-properties: false

springdoc:
  default-produces-media-type: application/json

server:
  servlet:
    context-path: /api/v1/

---
spring:
  config:
    activate:
      on-profile: dev
  #  datasource:
  #    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:book_social_network}
  #    driver-class-name: org.postgresql.Driver
  #    username: ${DB_USERNAME:duke}
  #    password: ${DB_PASSWORD:duke}
  jpa:
    #    hibernate:
    #      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    #    database: postgresql
    open-in-view: false
    #    database-platform: org.hibernate.dialect.PostgreSQLDialect
  #  mail:
  #    host: localhost
  #    port: 1025
  #    username:
  #    password:
  #    properties:
  #      mail:
  #        smtp:
  #          trust: "*"
  #        auth: true
  #        starttls:
  #          enable: true
  #        connection-timeout: 5000
  #        timeout: 3000
  #        write-timeout: 5000
  cache:
    type: redis
    redis:
      time-to-live: 30s

  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      url: redis://localhost:6379/0

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_HOST:localhost}:${KEYCLOAK_PORT:9090}/realms/${KEYCLOAK_REALM:bsn}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

application:
  security:
    jwt:
      #      secretKey: secret
      #      expiration: 86_400_000
      auth:
        converter:
          resource-id: bsn-rest-api
          principal-attribute: preferred_username
  frontend:
    url: http://localhost:4200
  #    activation-url: ${application.frontend.url}/activate-account
  file:
    upload:
      photos-output-path: ./uploads
